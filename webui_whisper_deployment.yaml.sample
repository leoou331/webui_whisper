---
# 创建命名空间
apiVersion: v1
kind: Namespace
metadata:
  name: whisper-app
---
# AWS ALB Controller 服务账户
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aws-load-balancer-controller
  namespace: kube-system
---
# AWS ALB Controller ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: aws-load-balancer-controller
rules:
  - apiGroups: [""]
    resources: ["endpoints", "pods", "secrets", "services", "namespaces", "events", "configmaps"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: ["extensions", "networking.k8s.io"]
    resources: ["ingresses", "ingressclasses", "ingresses/status"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
  - apiGroups: ["elasticloadbalancing.k8s.io"]
    resources: ["targetgroupbindings"]
    verbs: ["get", "list", "watch", "create", "delete", "update", "patch"]
---
# AWS ALB Controller ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: aws-load-balancer-controller
subjects:
  - kind: ServiceAccount
    name: aws-load-balancer-controller
    namespace: kube-system
roleRef:
  kind: ClusterRole
  name: aws-load-balancer-controller
  apiGroup: rbac.authorization.k8s.io
---
# AWS ALB Controller Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-load-balancer-controller
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: aws-load-balancer-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: aws-load-balancer-controller
    spec:
      serviceAccountName: aws-load-balancer-controller
      containers:
        - name: aws-load-balancer-controller
          image: amazon/aws-alb-ingress-controller:v2.4.1
          args:
            - --cluster-name=<your_eks_cluster_name>  # 替换为您的 EKS 集群名称
            - --ingress-class=alb
            - --aws-vpc-id=<your_vpc_id>  # 替换为您的 VPC ID
            - --aws-region=<your_aws_region>  # 替换为您的 AWS 区域
---
# 创建用于配置的 ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: whisper-app-config
  namespace: whisper-app
data:
  SECRET_NAME: "whisper-app-credentials"  # 替换为您的 Secret 名称
  SAGEMAKER_ENDPOINT: "whisper-endpoint"  # 替换为您的 SageMaker 端点名称
  AWS_REGION: "<your_aws_region>"  # 替换为您的 AWS 区域
---
# Whisper 应用程序服务账户
apiVersion: v1
kind: ServiceAccount
metadata:
  name: whisper-app
  namespace: whisper-app
---
# Whisper WebUI Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: whisper-webui
  namespace: whisper-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: whisper-webui
  template:
    metadata:
      labels:
        app: whisper-webui
    spec:
      serviceAccountName: whisper-app
      containers:
      - name: whisper-webui
        image: <your_ecr_image_uri>  # 替换为您的 ECR 镜像 URI
        ports:
        - containerPort: 8080
        env:
        - name: SECRET_NAME
          valueFrom:
            configMapKeyRef:
              name: whisper-app-config
              key: SECRET_NAME
        - name: SAGEMAKER_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: whisper-app-config
              key: SAGEMAKER_ENDPOINT
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: whisper-app-config
              key: AWS_REGION
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "300m"
        readinessProbe:
          httpGet:
            path: /login
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
---
# Whisper WebUI Service
apiVersion: v1
kind: Service
metadata:
  name: whisper-webui-service
  namespace: whisper-app
spec:
  selector:
    app: whisper-webui
  ports:
  - port: 80
    targetPort: 8080
  type: NodePort
---
# Whisper WebUI Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: whisper-webui-ingress
  namespace: whisper-app
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/security-groups: <your_security_group_id>  # 替换为您的安全组 ID
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: whisper-webui-service
            port:
              number: 80
